generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TipoServicio {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  productos   Producto[]

  @@map("tipos_servicio")
}

model Marca {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Modelo      Modelo[]
  piezas      piezas[]
  productos   Producto[]

  @@map("marcas")
}

model Ticket {
  id                     Int              @id @default(autoincrement())
  numeroTicket           String           @unique
  fechaRecepcion         DateTime         @default(now())
  clienteId              Int
  tipoServicioId         Int
  modeloId               Int
  descripcionProblema    String?
  estatusReparacionId    Int
  creadorId              Int
  tecnicoAsignadoId      Int?
  recogida               Boolean          @default(false)
  fechaEntrega           DateTime?
  entregado              Boolean          @default(false)
  cancelado              Boolean          @default(false)
  motivoCancelacion      String?
  fechaInicioDiagnostico DateTime?
  fechaFinDiagnostico    DateTime?
  fechaInicioReparacion  DateTime?
  fechaFinReparacion     DateTime?
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
  fechaCancelacion       DateTime?
  direccionId            Int?             @unique
  Presupuesto            Presupuesto?
  Reparacion             Reparacion?
  TicketProblema         TicketProblema[]
  dispositivos           dispositivos?
  entregas               entregas?
  pagos                  pagos[]
  direcciones            direcciones?     @relation(fields: [direccionId], references: [id])

  @@map("tickets")
}

model Proveedor {
  id                 Int              @id @default(autoincrement())
  nombre             String
  contacto           String
  telefono           String
  email              String?
  direccion          String?
  notas              String?
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  banco              String
  clabeInterbancaria String
  cuentaBancaria     String
  rfc                String
  tipo               TipoProveedor    @default(FISICA)
  entradas_almacen   EntradaAlmacen[]
  productos          Producto[]

  @@map("proveedores")
}

model Producto {
  id                             Int                              @id @default(autoincrement())
  sku                            String                           @unique
  nombre                         String
  descripcion                    String?
  notasInternas                  String?
  garantiaValor                  Int                              @default(0)
  garantiaUnidad                 String
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  categoriaId                    Int?
  marcaId                        Int?
  modeloId                       Int?
  proveedorId                    Int?
  precioPromedio                 Float                            @default(0)
  stock                          Int                              @default(0)
  tipoServicioId                 Int
  stockMaximo                    Int                              @default(0)
  stockMinimo                    Int                              @default(0)
  tipo                           TipoProducto                     @default(PRODUCTO)
  entradas                       EntradaAlmacen[]
  fotos_producto                 fotos_producto[]
  inventarios_minimos            inventarios_minimos?
  categorias                     categorias?                      @relation(fields: [categoriaId], references: [id])
  marcas                         Marca?                           @relation(fields: [marcaId], references: [id])
  Modelo                         Modelo?                          @relation(fields: [modeloId], references: [id])
  proveedores                    Proveedor?                       @relation(fields: [proveedorId], references: [id])
  tipos_servicio                 TipoServicio                     @relation(fields: [tipoServicioId], references: [id])
  productos_reparacion_frecuente productos_reparacion_frecuente[]
  salidas                        SalidaAlmacen[]

  @@map("productos")
}

model EntradaAlmacen {
  id           Int        @id @default(autoincrement())
  productoId   Int
  cantidad     Int
  precioCompra Float
  notas        String?
  fecha        DateTime   @default(now())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  usuarioId    Int
  proveedorId  Int?
  producto     Producto   @relation(fields: [productoId], references: [id])
  proveedores  Proveedor? @relation(fields: [proveedorId], references: [id])
  usuario      Usuario    @relation(fields: [usuarioId], references: [id])

  @@map("entradas_almacen")
}

model SalidaAlmacen {
  id         Int        @id @default(autoincrement())
  productoId Int
  cantidad   Int
  razon      String
  tipo       TipoSalida
  referencia String?
  fecha      DateTime   @default(now())
  usuarioId  Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  producto   Producto   @relation(fields: [productoId], references: [id])
  usuario    Usuario    @relation(fields: [usuarioId], references: [id])

  @@index([productoId])
  @@index([usuarioId])
  @@map("salidas_almacen")
}

model Cliente {
  id               Int      @id @default(autoincrement())
  nombre           String
  apellidoPaterno  String
  apellidoMaterno  String?
  telefonoCelular  String
  telefonoContacto String?
  email            String   @unique
  calle            String?
  numeroExterior   String?
  numeroInterior   String?
  colonia          String?
  ciudad           String?
  estado           String?
  codigoPostal     String?
  latitud          Float?
  longitud         Float?
  fuenteReferencia String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime
  rfc              String?
  passwordHash     String?
  activo           Boolean  @default(true)
  tipoRegistro     String   @default("Registro en tienda")
}

model EstatusReparacion {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  orden       Int
  color       String?
  activo      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model Modelo {
  id             Int              @id @default(autoincrement())
  nombre         String
  descripcion    String?
  marcaId        Int
  activo         Boolean          @default(true)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  marcas         Marca            @relation(fields: [marcaId], references: [id])
  ProblemaModelo ProblemaModelo[]
  piezas         piezas[]
  productos      Producto[]

  @@index([marcaId])
}

model Presupuesto {
  id                    Int                     @id @default(autoincrement())
  ticketId              Int                     @unique
  manoDeObra            Float
  subtotal              Float
  iva                   Float
  total                 Float
  aprobado              Boolean                 @default(false)
  fechaAprobacion       DateTime?
  pagado                Boolean                 @default(false)
  metodoPago            MetodoPago?
  comprobantePago       String?
  fechaPago             DateTime?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime
  anticipo              Float                   @default(0)
  cuponDescuento        String?
  descuento             Float                   @default(0)
  saldo                 Float                   @default(0)
  tickets               Ticket                  @relation(fields: [ticketId], references: [id])
  conceptos_presupuesto conceptos_presupuesto[]
}

model ProblemaModelo {
  id                   Int                  @id @default(autoincrement())
  modeloId             Int
  problemaFrecuenteId  Int
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  Modelo               Modelo               @relation(fields: [modeloId], references: [id])
  problemas_frecuentes problemas_frecuentes @relation(fields: [problemaFrecuenteId], references: [id])

  @@unique([modeloId, problemaFrecuenteId])
}

model Reparacion {
  id                    Int                     @id @default(autoincrement())
  ticketId              Int                     @unique
  tecnicoId             Int
  observaciones         String?
  fechaInicio           DateTime?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime
  fechaFin              DateTime?
  checklist             Json?
  fechaPausa            DateTime?
  fechaReanudacion      DateTime?
  fotos                 String[]
  videos                String[]
  diagnostico           String?
  saludBateria          Int?
  versionSO             String?
  Usuario               Usuario                 @relation(fields: [tecnicoId], references: [id])
  tickets               Ticket                  @relation(fields: [ticketId], references: [id])
  checklist_diagnostico checklist_diagnostico[]
  piezas_reparacion     piezas_reparacion[]
}

model TicketProblema {
  id                   Int                  @id @default(autoincrement())
  ticketId             Int
  problemaFrecuenteId  Int
  createdAt            DateTime             @default(now())
  updatedAt            DateTime
  problemas_frecuentes problemas_frecuentes @relation(fields: [problemaFrecuenteId], references: [id])
  tickets              Ticket               @relation(fields: [ticketId], references: [id])

  @@unique([ticketId, problemaFrecuenteId])
}

model Usuario {
  id                          Int                           @id @default(autoincrement())
  email                       String                        @unique
  nombre                      String
  apellidoPaterno             String
  apellidoMaterno             String?
  passwordHash                String
  nivel                       NivelUsuario                  @default(TECNICO)
  activo                      Boolean                       @default(true)
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime
  Reparacion                  Reparacion[]
  entradas                    EntradaAlmacen[]
  salidas                     SalidaAlmacen[]
  usuarios_puntos_recoleccion usuarios_puntos_recoleccion[]
}

model brands {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  models      models[]
}

model catalog_item_models {
  id            Int           @id @default(autoincrement())
  catalogItemId Int
  modelId       Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  catalog_items catalog_items @relation(fields: [catalogItemId], references: [id])
  models        models        @relation(fields: [modelId], references: [id])
}

model catalog_items {
  id                  Int                   @id @default(autoincrement())
  name                String
  description         String?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  catalog_item_models catalog_item_models[]
}

model categorias {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  productos   Producto[]
}

model checklist_diagnostico {
  id           Int        @id @default(autoincrement())
  reparacionId Int
  item         String
  respuesta    Boolean
  observacion  String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime
  Reparacion   Reparacion @relation(fields: [reparacionId], references: [id])
}

model checklist_items {
  id              Int      @id @default(autoincrement())
  nombre          String
  descripcion     String?
  paraDiagnostico Boolean  @default(false)
  paraReparacion  Boolean  @default(false)
  activo          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime
}

model conceptos_presupuesto {
  id             Int         @id @default(autoincrement())
  presupuestoId  Int
  descripcion    String
  cantidad       Int
  precioUnitario Float
  subtotal       Float
  createdAt      DateTime    @default(now())
  updatedAt      DateTime
  Presupuesto    Presupuesto @relation(fields: [presupuestoId], references: [id], onDelete: Cascade)
}

model direcciones {
  id             Int       @id @default(autoincrement())
  calle          String
  numeroExterior String
  numeroInterior String?
  colonia        String
  ciudad         String
  estado         String
  codigoPostal   String
  latitud        Float?
  longitud       Float?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime
  entregas       entregas?
  tickets        Ticket?
}

model dispositivos {
  id               Int       @id @default(autoincrement())
  capacidad        String?
  color            String?
  fechaCompra      DateTime?
  codigoDesbloqueo String?
  redCelular       String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
  ticketId         Int?      @unique
  tickets          Ticket?   @relation(fields: [ticketId], references: [id])
}

model entregas {
  id                 Int          @id @default(autoincrement())
  ticketId           Int          @unique
  tipoEntrega        TipoEntrega
  fechaEntrega       DateTime?
  entregado          Boolean      @default(false)
  observaciones      String?
  direccionEntregaId Int?         @unique
  createdAt          DateTime     @default(now())
  updatedAt          DateTime
  direcciones        direcciones? @relation(fields: [direccionEntregaId], references: [id])
  tickets            Ticket       @relation(fields: [ticketId], references: [id])
}

model fotos_producto {
  id         Int      @id @default(autoincrement())
  url        String
  createdAt  DateTime @default(now())
  productoId Int
  productos  Producto @relation(fields: [productoId], references: [id], onDelete: Cascade)
}

model inventarios_minimos {
  id             Int      @id @default(autoincrement())
  productoId     Int      @unique
  cantidadMinima Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  productos      Producto @relation(fields: [productoId], references: [id])
}

model models {
  id                  Int                   @id @default(autoincrement())
  name                String
  description         String?
  brandId             Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  catalog_item_models catalog_item_models[]
  brands              brands                @relation(fields: [brandId], references: [id])
}

model pagos {
  id          Int      @id @default(autoincrement())
  ticketId    Int
  monto       Float
  fecha       DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  comprobante String?
  metodoPago  String
  tickets     Ticket   @relation(fields: [ticketId], references: [id])
}

model pasos_reparacion_frecuente {
  id                      Int                     @id @default(autoincrement())
  reparacionFrecuenteId   Int
  descripcion             String
  orden                   Int
  createdAt               DateTime                @default(now())
  updatedAt               DateTime
  reparaciones_frecuentes reparaciones_frecuentes @relation(fields: [reparacionFrecuenteId], references: [id], onDelete: Cascade)
}

model piezas {
  id                Int                 @id @default(autoincrement())
  nombre            String
  descripcion       String?
  sku               String?             @unique
  cantidad          Int                 @default(0)
  precioCompra      Float
  precioVenta       Float
  unidadMedida      String?
  ubicacion         String?
  activo            Boolean             @default(true)
  marcaId           Int?
  modeloId          Int?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime
  marcas            Marca?              @relation(fields: [marcaId], references: [id])
  Modelo            Modelo?             @relation(fields: [modeloId], references: [id])
  piezas_reparacion piezas_reparacion[]
}

model piezas_reparacion {
  id                  Int        @id @default(autoincrement())
  reparacionId        Int
  piezaId             Int?
  cantidad            Int
  precioUnitario      Float
  createdAt           DateTime   @default(now())
  updatedAt           DateTime
  conceptoExtra       String?
  precioConceptoExtra Float?
  piezas              piezas?    @relation(fields: [piezaId], references: [id])
  Reparacion          Reparacion @relation(fields: [reparacionId], references: [id])
}

model precios_venta {
  id                     String   @id
  tipo                   String
  nombre                 String
  marca                  String
  modelo                 String
  precio_compra_promedio Float
  precio_venta           Float
  created_at             DateTime @default(now())
  updated_at             DateTime
  created_by             String
  updated_by             String
  producto_id            Int?
  servicio_id            Int?
}

model problemas_frecuentes {
  id             Int              @id @default(autoincrement())
  nombre         String
  descripcion    String?
  activo         Boolean          @default(true)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  modeloId       Int
  ProblemaModelo ProblemaModelo[]
  TicketProblema TicketProblema[]
}

model productos_reparacion_frecuente {
  id                      Int                     @id @default(autoincrement())
  reparacionFrecuenteId   Int
  productoId              Int
  cantidad                Int
  precioVenta             Float
  conceptoExtra           String?
  precioConceptoExtra     Float?
  createdAt               DateTime                @default(now())
  updatedAt               DateTime
  productos               Producto                @relation(fields: [productoId], references: [id])
  reparaciones_frecuentes reparaciones_frecuentes @relation(fields: [reparacionFrecuenteId], references: [id], onDelete: Cascade)
}

model providers {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model puntos_recoleccion {
  id                          String                        @id
  nombreComercial             String
  nombreResponsable           String
  apellidoPaterno             String
  apellidoMaterno             String?
  telefono                    String
  celular                     String?
  email                       String                        @unique
  urlNegocio                  String?
  activo                      Boolean                       @default(true)
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime
  usuarios_puntos_recoleccion usuarios_puntos_recoleccion[]
}

model reparaciones_frecuentes {
  id                             Int                              @id @default(autoincrement())
  nombre                         String
  descripcion                    String?
  activo                         Boolean                          @default(true)
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime
  pasos_reparacion_frecuente     pasos_reparacion_frecuente[]
  productos_reparacion_frecuente productos_reparacion_frecuente[]
}

model service_types {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model usuarios_puntos_recoleccion {
  id                 String             @id
  puntoRecoleccionId String
  usuarioId          Int
  nivel              NivelUsuarioPunto
  activo             Boolean            @default(true)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime
  puntos_recoleccion puntos_recoleccion @relation(fields: [puntoRecoleccionId], references: [id])
  Usuario            Usuario            @relation(fields: [usuarioId], references: [id])

  @@unique([puntoRecoleccionId, usuarioId])
}

enum NivelUsuario {
  ADMINISTRADOR
  TECNICO
  ATENCION_CLIENTE
}

enum TipoProveedor {
  FISICA
  MORAL
}

enum TipoSalida {
  VENTA
  DANO
  MERMA
  OTRO
}

enum MetodoPago {
  EFECTIVO
  TARJETA
  TRANSFERENCIA
  PAGO_ENTREGA
}

enum NivelUsuarioPunto {
  ADMINISTRADOR
  OPERADOR
}

enum TipoEntrega {
  OFICINA
  DOMICILIO
}

enum TipoProducto {
  PRODUCTO
  SERVICIO
}
