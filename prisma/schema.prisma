generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                          Int                           @id @default(autoincrement())
  email                       String                        @unique
  nombre                      String
  apellidoPaterno             String
  apellidoMaterno             String?
  passwordHash                String
  nivel                       NivelUsuario                  @default(TECNICO)
  activo                      Boolean                       @default(true)
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime                      @updatedAt
  reparaciones                Reparacion[]
  entradas                    EntradaAlmacen[]
  salidas                     SalidaAlmacen[]
  usuarios_puntos_recoleccion usuarios_puntos_recoleccion[]

  @@map("Usuario")
}

model Cliente {
  id               Int      @id @default(autoincrement())
  nombre           String
  apellidoPaterno  String
  apellidoMaterno  String?
  telefonoCelular  String
  telefonoContacto String?
  email            String   @unique
  calle            String?
  numeroExterior   String?
  numeroInterior   String?
  colonia          String?
  ciudad           String?
  estado           String?
  codigoPostal     String?
  latitud          Float?
  longitud         Float?
  fuenteReferencia String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  rfc              String?
  passwordHash     String?
  activo           Boolean  @default(true)
  tipoRegistro     String   @default("Registro en tienda")
}

model TipoServicio {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("service_types")
}

model Marca {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  modelos     Modelo[]
  piezas      Pieza[]
  productos   Producto[]

  @@map("marcas")
}

model Modelo {
  id              Int              @id @default(autoincrement())
  nombre          String
  descripcion     String?
  marcaId         Int
  activo          Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  marca           Marca            @relation(fields: [marcaId], references: [id])
  problemasModelo ProblemaModelo[]
  piezas          Pieza[]
  productos       Producto[]

  @@index([marcaId])
}

model ProblemaFrecuente {
  id              Int              @id @default(autoincrement())
  nombre          String
  descripcion     String?
  activo          Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  modeloId        Int
  problemasModelo ProblemaModelo[]
  ticketProblemas TicketProblema[]

  @@map("problemas_frecuentes")
}

model ProblemaModelo {
  id                  Int               @id @default(autoincrement())
  modeloId            Int
  problemaFrecuenteId Int
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  modelo              Modelo            @relation(fields: [modeloId], references: [id])
  problemaFrecuente   ProblemaFrecuente @relation(fields: [problemaFrecuenteId], references: [id])

  @@unique([modeloId, problemaFrecuenteId])
}

model EstatusReparacion {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  orden       Int
  color       String?
  activo      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pieza {
  id               Int               @id @default(autoincrement())
  nombre           String
  descripcion      String?
  sku              String?           @unique
  cantidad         Int               @default(0)
  precioCompra     Float
  precioVenta      Float
  unidadMedida     String?
  ubicacion        String?
  activo           Boolean           @default(true)
  marcaId          Int?
  modeloId         Int?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  marca            Marca?            @relation(fields: [marcaId], references: [id])
  modelo           Modelo?           @relation(fields: [modeloId], references: [id])
  piezasReparacion PiezaReparacion[]

  @@map("piezas")
}

model Ticket {
  id                     Int              @id @default(autoincrement())
  numeroTicket           String           @unique
  fechaRecepcion         DateTime         @default(now())
  clienteId              Int
  tipoServicioId         Int
  modeloId               Int
  descripcionProblema    String?
  estatusReparacionId    Int
  creadorId              Int
  tecnicoAsignadoId      Int?
  recogida               Boolean          @default(false)
  fechaEntrega           DateTime?
  entregado              Boolean          @default(false)
  cancelado              Boolean          @default(false)
  motivoCancelacion      String?
  fechaInicioDiagnostico DateTime?
  fechaFinDiagnostico    DateTime?
  fechaInicioReparacion  DateTime?
  fechaFinReparacion     DateTime?
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
  fechaCancelacion       DateTime?
  direccionId            Int?             @unique
  presupuesto            Presupuesto?
  reparacion             Reparacion?
  ticketProblemas        TicketProblema[]
  dispositivo            Dispositivo?
  entrega                Entrega?
  pagos                  Pago[]
  direccion              Direccion?       @relation(fields: [direccionId], references: [id])

  @@map("tickets")
}

model TicketProblema {
  id                  Int               @id @default(autoincrement())
  ticketId            Int
  problemaFrecuenteId Int
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  problemaFrecuente   ProblemaFrecuente @relation(fields: [problemaFrecuenteId], references: [id])
  ticket              Ticket            @relation(fields: [ticketId], references: [id])

  @@unique([ticketId, problemaFrecuenteId])
}

model Reparacion {
  id               Int                    @id @default(autoincrement())
  ticketId         Int                    @unique
  tecnicoId        Int
  observaciones    String?
  fechaInicio      DateTime?
  createdAt        DateTime               @default(now())
  updatedAt        DateTime               @updatedAt
  fechaFin         DateTime?
  checklist        Json?
  fechaPausa       DateTime?
  fechaReanudacion DateTime?
  fotos            String[]
  videos           String[]
  diagnostico      String?
  saludBateria     Int?
  versionSO        String?
  tecnico          Usuario                @relation(fields: [tecnicoId], references: [id])
  ticket           Ticket                 @relation(fields: [ticketId], references: [id])
  checklistItems   ChecklistDiagnostico[]
  piezas           PiezaReparacion[]
}

model ChecklistDiagnostico {
  id           Int        @id @default(autoincrement())
  reparacionId Int
  item         String
  respuesta    Boolean
  observacion  String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  reparacion   Reparacion @relation(fields: [reparacionId], references: [id])

  @@map("checklist_diagnostico")
}

model PiezaReparacion {
  id                  Int        @id @default(autoincrement())
  reparacionId        Int
  piezaId             Int?
  cantidad            Int
  precioUnitario      Float
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  conceptoExtra       String?
  precioConceptoExtra Float?
  pieza               Pieza?     @relation(fields: [piezaId], references: [id])
  reparacion          Reparacion @relation(fields: [reparacionId], references: [id])

  @@map("piezas_reparacion")
}

model Presupuesto {
  id              Int                   @id @default(autoincrement())
  ticketId        Int                   @unique
  manoDeObra      Float
  subtotal        Float
  iva             Float
  total           Float
  aprobado        Boolean               @default(false)
  fechaAprobacion DateTime?
  pagado          Boolean               @default(false)
  metodoPago      MetodoPago?
  comprobantePago String?
  fechaPago       DateTime?
  createdAt       DateTime              @default(now())
  updatedAt       DateTime              @updatedAt
  anticipo        Float                 @default(0)
  cuponDescuento  String?
  descuento       Float                 @default(0)
  saldo           Float                 @default(0)
  ticket          Ticket                @relation(fields: [ticketId], references: [id])
  conceptos       ConceptoPresupuesto[]
}

model ConceptoPresupuesto {
  id             Int         @id @default(autoincrement())
  presupuestoId  Int
  descripcion    String
  cantidad       Int
  precioUnitario Float
  subtotal       Float
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  presupuesto    Presupuesto @relation(fields: [presupuestoId], references: [id], onDelete: Cascade)

  @@map("conceptos_presupuesto")
}

model Proveedor {
  id                 Int              @id @default(autoincrement())
  nombre             String
  contacto           String
  telefono           String
  email              String?
  direccion          String?
  notas              String?
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  banco              String
  clabeInterbancaria String
  cuentaBancaria     String
  rfc                String
  tipo               TipoProveedor    @default(FISICA)
  entradas           EntradaAlmacen[]
  productos          Producto[]

  @@map("proveedores")
}

model Producto {
  id                     Int                           @id @default(autoincrement())
  sku                    String                        @unique
  nombre                 String
  descripcion            String?
  notasInternas          String?
  garantiaValor          Int                           @default(0)
  garantiaUnidad         String
  createdAt              DateTime                      @default(now())
  updatedAt              DateTime                      @updatedAt
  categoriaId            Int?
  marcaId                Int?
  modeloId               Int?
  proveedorId            Int?
  precioPromedio         Float                         @default(0)
  stock                  Int                           @default(0)
  tipoServicioId         Int
  stockMaximo            Int                           @default(0)
  stockMinimo            Int                           @default(0)
  tipo                   TipoProducto                  @default(PRODUCTO)
  entradas               EntradaAlmacen[]
  fotos                  FotoProducto[]
  inventarioMinimo       InventarioMinimo?
  categoria              Categoria?                    @relation(fields: [categoriaId], references: [id])
  marca                  Marca?                        @relation(fields: [marcaId], references: [id])
  modelo                 Modelo?                       @relation(fields: [modeloId], references: [id])
  proveedor              Proveedor?                    @relation(fields: [proveedorId], references: [id])
  tipoServicio           tipos_servicio                @relation(fields: [tipoServicioId], references: [id])
  reparacionesFrecuentes ProductoReparacionFrecuente[]
  salidas                SalidaAlmacen[]

  @@map("productos")
}

model InventarioMinimo {
  id             Int      @id @default(autoincrement())
  productoId     Int      @unique
  cantidadMinima Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  producto       Producto @relation(fields: [productoId], references: [id])

  @@map("inventarios_minimos")
}

model EntradaAlmacen {
  id           Int        @id @default(autoincrement())
  productoId   Int
  cantidad     Int
  precioCompra Float
  notas        String?
  fecha        DateTime   @default(now())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  usuarioId    Int
  proveedorId  Int?
  producto     Producto   @relation(fields: [productoId], references: [id])
  proveedor    Proveedor? @relation(fields: [proveedorId], references: [id])
  usuario      Usuario    @relation(fields: [usuarioId], references: [id])

  @@map("entradas_almacen")
}

model FotoProducto {
  id         Int      @id @default(autoincrement())
  url        String
  createdAt  DateTime @default(now())
  productoId Int
  producto   Producto @relation(fields: [productoId], references: [id], onDelete: Cascade)

  @@map("fotos_producto")
}

model SalidaAlmacen {
  id         Int        @id @default(autoincrement())
  productoId Int
  cantidad   Int
  razon      String
  tipo       TipoSalida
  referencia String?
  fecha      DateTime   @default(now())
  usuarioId  Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  producto   Producto   @relation(fields: [productoId], references: [id])
  usuario    Usuario    @relation(fields: [usuarioId], references: [id])

  @@index([productoId])
  @@index([usuarioId])
  @@map("salidas_almacen")
}

model Categoria {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  productos   Producto[]

  @@map("categorias")
}

model PrecioVenta {
  id                     String   @id @default(uuid())
  tipo                   String
  nombre                 String
  marca                  String
  modelo                 String
  precio_compra_promedio Float
  precio_venta           Float
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  created_by             String
  updated_by             String
  producto_id            Int?
  servicio_id            Int?

  @@map("precios_venta")
}

model ReparacionFrecuente {
  id          Int                           @id @default(autoincrement())
  nombre      String
  descripcion String?
  activo      Boolean                       @default(true)
  createdAt   DateTime                      @default(now())
  updatedAt   DateTime                      @updatedAt
  pasos       PasoReparacionFrecuente[]
  productos   ProductoReparacionFrecuente[]

  @@map("reparaciones_frecuentes")
}

model PasoReparacionFrecuente {
  id                    Int                 @id @default(autoincrement())
  reparacionFrecuenteId Int
  descripcion           String
  orden                 Int
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  reparacionFrecuente   ReparacionFrecuente @relation(fields: [reparacionFrecuenteId], references: [id], onDelete: Cascade)

  @@map("pasos_reparacion_frecuente")
}

model ProductoReparacionFrecuente {
  id                    Int                 @id @default(autoincrement())
  reparacionFrecuenteId Int
  productoId            Int
  cantidad              Int
  precioVenta           Float
  conceptoExtra         String?
  precioConceptoExtra   Float?
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  producto              Producto            @relation(fields: [productoId], references: [id])
  reparacionFrecuente   ReparacionFrecuente @relation(fields: [reparacionFrecuenteId], references: [id], onDelete: Cascade)

  @@map("productos_reparacion_frecuente")
}

model ChecklistItem {
  id              Int      @id @default(autoincrement())
  nombre          String
  descripcion     String?
  paraDiagnostico Boolean  @default(false)
  paraReparacion  Boolean  @default(false)
  activo          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("checklist_items")
}

model Dispositivo {
  id               Int       @id @default(autoincrement())
  capacidad        String?
  color            String?
  fechaCompra      DateTime?
  codigoDesbloqueo String?
  redCelular       String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  ticketId         Int?      @unique
  ticket           Ticket?   @relation(fields: [ticketId], references: [id])

  @@map("dispositivos")
}

model Pago {
  id          Int      @id @default(autoincrement())
  ticketId    Int
  monto       Float
  fecha       DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  comprobante String?
  metodoPago  String
  ticket      Ticket   @relation(fields: [ticketId], references: [id])

  @@map("pagos")
}

model Direccion {
  id             Int      @id @default(autoincrement())
  calle          String
  numeroExterior String
  numeroInterior String?
  colonia        String
  ciudad         String
  estado         String
  codigoPostal   String
  latitud        Float?
  longitud       Float?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  entrega        Entrega?
  ticket         Ticket?

  @@map("direcciones")
}

model Entrega {
  id                 Int         @id @default(autoincrement())
  ticketId           Int         @unique
  tipoEntrega        TipoEntrega
  fechaEntrega       DateTime?
  entregado          Boolean     @default(false)
  observaciones      String?
  direccionEntregaId Int?        @unique
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  direccionEntrega   Direccion?  @relation(fields: [direccionEntregaId], references: [id])
  ticket             Ticket      @relation(fields: [ticketId], references: [id])

  @@map("entregas")
}

model brands {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  models      models[]
}

model catalog_item_models {
  id            Int           @id @default(autoincrement())
  catalogItemId Int
  modelId       Int
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  catalog_items catalog_items @relation(fields: [catalogItemId], references: [id])
  models        models        @relation(fields: [modelId], references: [id])
}

model catalog_items {
  id                  Int                   @id @default(autoincrement())
  name                String
  description         String?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  catalog_item_models catalog_item_models[]
}

model models {
  id                  Int                   @id @default(autoincrement())
  name                String
  description         String?
  brandId             Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  catalog_item_models catalog_item_models[]
  brands              brands                @relation(fields: [brandId], references: [id])
}

model providers {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model puntos_recoleccion {
  id                          String                        @id
  nombreComercial             String
  nombreResponsable           String
  apellidoPaterno             String
  apellidoMaterno             String?
  telefono                    String
  celular                     String?
  email                       String                        @unique
  urlNegocio                  String?
  activo                      Boolean                       @default(true)
  createdAt                   DateTime                      @default(now())
  updatedAt                   DateTime
  usuarios_puntos_recoleccion usuarios_puntos_recoleccion[]
}

model tipos_servicio {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  productos   Producto[]
}

model users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model usuarios_puntos_recoleccion {
  id                 String             @id
  puntoRecoleccionId String
  usuarioId          Int
  nivel              NivelUsuarioPunto
  activo             Boolean            @default(true)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime
  puntos_recoleccion puntos_recoleccion @relation(fields: [puntoRecoleccionId], references: [id])
  Usuario            Usuario            @relation(fields: [usuarioId], references: [id])

  @@unique([puntoRecoleccionId, usuarioId])
}

enum TipoProveedor {
  FISICA
  MORAL
}

enum TipoProducto {
  PRODUCTO
  SERVICIO
}

enum TipoSalida {
  VENTA
  DANO
  MERMA
  OTRO
}

enum NivelUsuario {
  ADMINISTRADOR
  TECNICO
  ATENCION_CLIENTE
}

enum MetodoPago {
  EFECTIVO
  TARJETA
  TRANSFERENCIA
  PAGO_ENTREGA
}

enum TipoEntrega {
  OFICINA
  DOMICILIO
}

enum NivelUsuarioPunto {
  ADMINISTRADOR
  OPERADOR
}
